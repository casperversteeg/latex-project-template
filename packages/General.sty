\ProvidesPackage{General}[2019/07/21, v1.0]

%%%%% Packages to include %%%%%
% typesetting
\RequirePackage[utf8]{inputenc}   % encoder parsing
\RequirePackage{calc}             % arithmetic operations to dimensioning
\RequirePackage{microtype}        % improves typesetting
\RequirePackage{setspace}         % gives more line-spacing environments
\RequirePackage[symbol*]{footmisc}% different footnote labeling
\RequirePackage[titletoc]{appendix}% adds appendix to table of contents
% \RequirePackage[hyphens]{url}     % formatting urls

\RequirePackage{multicol}         % multiple columns in text
\RequirePackage{multirow}         % text spans multiple rows
\RequirePackage{lscape}           % allows for landscape pages
\RequirePackage{lipsum}           % lorem ipsum
\RequirePackage{tabu}             % better tables
\RequirePackage{longtable,tabularx}% more table environments
\RequirePackage{array}            % extensions to table and arrays
\RequirePackage{verbatim}         % print text without formatting
\RequirePackage{soul}             % for better hyphenation
\RequirePackage{lettrine}         % dropped capitals across multiple lines
\RequirePackage{cprotect}         % allows verbatim in argument for other envs
\RequirePackage[subpreambles=true]{standalone}% adds modularity
\RequirePackage{subfiles}
\RequirePackage{fancyhdr}         % much nicer header styling
\RequirePackage{dirtree}          % directory tree listings
\RequirePackage[many]{tcolorbox}  % box shading and titling
\RequirePackage[edges]{forest}    % For drawing trees

% math
\RequirePackage{amsmath, amssymb, bm} % AMS math extensions
\RequirePackage{mathtools}        % more math symbols and environments
\RequirePackage{nicematrix}       % better matrix environments
\RequirePackage{framed}           % ntheorem dependency
\RequirePackage[amsmath, framed, thmmarks]{ntheorem} % better theorem typesetting
\RequirePackage{cancel}           % provides calcelto for striking out terms in eq

% misc?
\RequirePackage{fontawesome}
\RequirePackage{textcomp}
\RequirePackage{algorithm, algpseudocode}
\RequirePackage{media9}
\RequirePackage{ragged2e}
\RequirePackage{overpic}
\RequirePackage{etoolbox}
\RequirePackage{multimedia}

% graphics
\RequirePackage{graphicx}         % include graphics in document
\RequirePackage{float}            % extend float capabilities
\RequirePackage{dblfloatfix}      % for multi-column floats
\RequirePackage[labelfont=bf, tableposition=top]{caption} % set caption props
\RequirePackage{subcaption}       % subcaptions to subfigures
\RequirePackage{adjustbox}        % for rescaling, rotating and clipping
\RequirePackage{color}            % add colors for text and figures
\RequirePackage{xcolor}           % extension of color package
\RequirePackage{tikz}             % TikZ
\RequirePackage{schemabloc}       % TikZ block diagrams
\RequirePackage{stanli}           % TikZ structural analysis library
\RequirePackage{tikz-uml}         % TikZ unified modeling language for diagrams
\RequirePackage{customdimline}     % TikZ dimensioning tools
\RequirePackage{wasysym}          % for diameter symbol
\RequirePackage{pgfplots, pgfplotstable}

% bibliography
\RequirePackage[english]{babel}   % biblatex dependency
\RequirePackage{csquotes, xpatch} % biblatex dependency
\RequirePackage{ifthen, xstring}  % biblatex dependency
\RequirePackage{pgfopts}          % biblatex dependency
\RequirePackage[style=numeric, sorting=none, backend=biber]{biblatex} % biblatex

% code listings
\newif\if@lite
\DeclareOption{lite}{\@litetrue}
\ExecuteOptions{}
\ProcessOptions\relax
\if@lite
\else
  \RequirePackage[outputdir=build]{minted} % use minted for code listing

  % minted settings
  \setminted{
    bgcolor=backcolor, fontfamily=tt, linenos=true, numberblanklines=true,
    samepage=false, % do not force the list to appear on the same page
    breaklines=true, numbersep=3pt, fontsize=\small, resetmargins=true,
    framesep=0mm, breakafter=.
  }
  \setmintedinline{
    bgcolor=backcolor, fontfamily=tt, linenos=false, numberblanklines=false,
    samepage=false, % do not force the list to appear on the same page
    breaklines=true, fontsize=\small
  }
\fi

% utilities
\RequirePackage{morewrites}

%%%%% Style options for packages %%%%%
% table column formatting types and vertical separation factor
\newcolumntype{P}[1]{>{\centering\arraybackslash}p{#1}}
\newcolumntype{D}[1]{>{\arraybackslash}p{#1}}
\renewcommand{\arraystretch}{1.2}
\setlength\LTleft{0pt} % for longtable

% formatting quotes
\RequirePackage[indentfirst=false,font+=small,leftmargin=0.4in,rightmargin=0pt,vskip=0pt] {quoting}

% formatting figure and table captions
\captionsetup*{labelsep=quad}

% equation numbering
\renewcommand{\theequation}{\arabic{section}.\arabic{equation}}
\numberwithin{equation}{section}

% distance of separation between columns
\setlength{\columnsep}{1cm}

% aligns text with lettrine package
\setlength{\DefaultNindent}{0pt}


% more TikZ stuff
\usetikzlibrary{circuits,shapes, arrows, positioning, arrows.meta, matrix, decorations.pathreplacing, shadings, spy}

\tikzstyle{block} = [draw, rectangle, minimum height=3em, minimum width=6em]

\tikzstyle{sum} = [draw, circle, node distance=1cm]
\tikzstyle{input} = [coordinate]
\tikzstyle{output} = [coordinate]
\tikzstyle{pinstyle} = [pin edge={to-, thin,black}]
\tikzumlset{font=\footnotesize\ttfamily}

% Breaking long lines with squiggles
\tikzset{ext/.pic={
\path [fill=white] (-0.2,0)to[bend left](0,0.1)to[bend right](0.2,0.2)to(0.2,0)to[bend left](0,-0.1)to[bend right](-0.2,-0.2)--cycle;
\draw (-0.2,0)to[bend left](0,0.1)to[bend right](0.2,0.2) (0.2,0)to[bend left](0,-0.1)to[bend right](-0.2,-0.2);
}}

% Highlighting areas in plot
\pgfdeclarelayer{background}
\pgfsetlayers{background,main}
\pgfplotsset{compat=1.7,
emphasize/.code args={#1:#2with#3}{
    \pgfplotsextra{
        \begin{pgfonlayer}{background}%[on background layer]
          \draw[draw = none, fill=#3] ({axis cs:#1,0} |- {axis description cs:0,0})
          rectangle ({axis cs:#2,0} |- {axis description cs:0,1});
        \end{pgfonlayer}
        }
    }
}
\usepgfplotslibrary{fillbetween}

%%%%% General formatting additions %%%%%
% \newcommand{\qed}{\hfill\blacksquare}           % QED square
\renewcommand{\d}{\mathrm{d}}                     % differential d not itallic
\newcommand{\norm}[1]{\left\lVert#1\right\rVert}  % quick norm operator
\newcommand{\Norm}[1]{{\big\lVert} #1 {\big\rVert}}		% quick norm (possibly better sizing)

\makeatletter
% Label access to \thetitle and \thedate
% \renewcommand{\title}[1]{\gdef\@thetitle{#1}}
% \renewcommand{\date}[1]{\gdef\@thedate{#1}}
\let\thetitle\@title%
\let\thedate\@date%
% Create new big operator symbol by copying "sum" 's logic
\DeclareRobustCommand\bigop[1]{%
  \mathop{\vphantom{\sum}\mathpalette\bigop@{#1}}\slimits@
}
\newcommand{\bigop@}[2]{%
  \vcenter{%
    \sbox\z@{$#1\sum$}%
    \hbox{\resizebox{\ifx#1\displaystyle.9\fi\dimexpr\ht\z@+\dp\z@}{!}{$\m@th#2$}}%
  }%
}
\makeatother

\newcommand{\bigA}{\DOTSB\bigop{\mathrm{A}}}      % Assembly operator

\renewcommand{\thefootnote}{\arabic{footnote}}    % arabic num for footnotes

\newcommand{\compresslist}{ % Define a command to reduce spacing within itemize/enumerate environments, this is used right after \begin{itemize} or \begin{enumerate}
\setlength{\itemsep}{1pt}
\setlength{\parskip}{0pt}
\setlength{\parsep}{0pt}
}


\definecolor{DukeNavy}{HTML}{012169}
\definecolor{DukeRoyal}{RGB}{0,83,155}
\definecolor{backcolor}{rgb}{0.99,0.99,0.96} % code background color
\definecolor{Gainsboro}{rgb}{0.86, 0.86, 0.86}
\definecolor{Lavender}{rgb}{0.9, 0.9, 0.98}

\definecolor{matlab1}{HTML}{0072db}
\definecolor{matlab2}{HTML}{d95319}
\definecolor{matlab3}{HTML}{edb120}
\definecolor{matlab4}{HTML}{7e2f8e}
\definecolor{matlab5}{HTML}{77ac30}
\definecolor{matlab6}{HTML}{4dbeee}
\definecolor{matlab7}{HTML}{a2142f}

\pgfplotscreateplotcyclelist{MatlabParula}{%
  {matlab1, thick},
  {matlab2, thick},
  {matlab3, thick},
  {matlab4, thick},
  {matlab5, thick},
  {matlab6, thick},
  {matlab7, thick}
}

\colorlet{Theoremcolor}{Gainsboro!50!Lavender}
\colorlet{Objectivecolor}{Gainsboro!50!Lavender}
\colorlet{Examplecolor}{green!10}
\colorlet{Definitioncolor}{blue!10}
\colorlet{Exercisecolor}{orange!10}
\colorlet{Problemcolor}{DukeRoyal!10}
\colorlet{Disclaimercolor}{red!10}


\newlength{\lblThrmWidth}
\setlength{\lblThrmWidth}{\widthof{\textbf{Theorem~}}}
\addtolength{\lblThrmWidth}{1mm}
\newlength{\lblExWidth}
\setlength{\lblExWidth}{\widthof{\textbf{Example~}}}
\addtolength{\lblExWidth}{1mm}
\newlength{\lblDefnWidth}
\setlength{\lblDefnWidth}{\widthof{\textbf{Definition~}}}
\addtolength{\lblThrmWidth}{1mm}
\newlength{\lblExercWidth}
\setlength{\lblExercWidth}{\widthof{\textbf{Exercise~}}}
\addtolength{\lblExercWidth}{1mm}
\newlength{\lblProbWidth}
\setlength{\lblProbWidth}{\widthof{\textbf{Problem~}}}
\addtolength{\lblProbWidth}{1mm}
\newlength{\lblDisclWidth}
\setlength{\lblDisclWidth}{\widthof{\textbf{Disclaimer~}}}
\addtolength{\lblDisclWidth}{1mm}
\newlength{\lblObjWidth}
\setlength{\lblObjWidth}{\widthof{\textbf{Objective~}}}
\addtolength{\lblObjWidth}{1mm}

\tcbset{%
    cboxes/.style={%
        enhanced, breakable, sharp corners,
        fonttitle=\bfseries, description font=\mdseries\itshape,
        colback=#1color, colbacktitle=#1color,
        titlerule=1mm, titlerule style=#1color,
        boxrule=0pt, coltitle=black, frame hidden,
        toptitle=2mm, lefttitle=2mm,
        boxsep=1mm, top=0mm,
        description delimiters parenthesis,
        terminator sign none,
    }
}

\newtcbtheorem[auto counter, number within=section]{theorem}{Theorem}{ cboxes=Theorem,fontupper=\itshape, leftupper=\lblThrmWidth, before lower=\textit{Proof}:~}{thm}

\newtcbtheorem[auto counter, number within=section]{example}{Example}{ cboxes=Example, leftupper=\lblExWidth, , before lower=\textit{Solution}:~}{ex}

\newtcbtheorem[auto counter, number within=section]{definition}{Definition}{ cboxes=Definition, leftupper=\lblDefnWidth}{def}

\newtcbtheorem[auto counter, number within=section]{exercise}{Exercise}{ cboxes=Exercise, leftupper=\lblExercWidth}{exec}

\newtcbtheorem[auto counter, number within=section]{problem}{Problem}{ cboxes=Problem, leftupper=\lblProbWidth}{prob}

\newtcbtheorem[auto counter, number within=section]{disclaimer}{Disclaimer}{ cboxes=Disclaimer, leftupper=\lblDisclWidth}{discl}

\newtcbtheorem[auto counter, number within=section]{objective}{Objective}{ cboxes=Objective, leftupper=\lblObjWidth}{thm}

\newcommand{\dukelogo}[1]{\includestandalone[height=#1]{../images/DukeUniversityCrest}}

\newcommand*\circled[1]{\tikz[baseline=(char.base)]{
            \node[shape=circle,draw,inner sep=2pt] (char) {#1};}}

% Underbrace shortcut
\newcommand{\ubrace}[2]{\underbrace{\vphantom{\left(\frac{a}{b}\right)}#1}_{#2}}

% Wide breve
\makeatletter
\def\widebreve{\mathpalette\wide@breve}
\def\wide@breve#1#2{\sbox\z@{$#1#2$}%
     \mathop{\vbox{\m@th\ialign{##\crcr
\kern0.08em\brevefill#1{0.8\wd\z@}\crcr\noalign{\nointerlineskip}%
                    $\hss#1#2\hss$\crcr}}}\limits}
\def\brevefill#1#2{$\m@th\sbox\tw@{$#1($}%
  \hss\resizebox{#2}{\wd\tw@}{\rotatebox[origin=c]{90}{\upshape(}}\hss$}
\makeatletter

% Some options for argument placeholders like f(x, . )
\newcommand{\parm}{\mathord{\color{black!33}\bullet}}%
\def\argdot{{\hspace{0.18em}\cdot\hspace{0.18em}}}

% Pgfplots cycling
\makeatletter
\def\pgfplots@getautoplotspec into#1{%
    \begingroup
    \let#1=\pgfutil@empty
    \pgfkeysgetvalue{/pgfplots/cycle multi list/@dim}\pgfplots@cycle@dim
    %
    \let\pgfplots@listindex=\pgfplots@numplots
    %%% Start new code
    \pgfkeysgetvalue{/pgfplots/cycle list set}\pgfplots@listindex@set
    \ifx\pgfplots@listindex@set\pgfutil@empty
    \else
        \c@pgf@counta=\pgfplots@listindex
        \c@pgf@countb=\pgfplots@listindex@set
        \advance\c@pgf@countb by -\c@pgf@counta
        \globaldefs=1\relax
        \edef\setshift{%
            \noexpand\pgfkeys{
                /pgfplots/cycle list shift=\the\c@pgf@countb,
                /pgfplots/cycle list set=
            }
        }%
        \setshift%
    \fi
    %%% End new code
    \pgfkeysgetvalue{/pgfplots/cycle list shift}\pgfplots@listindex@shift
    \ifx\pgfplots@listindex@shift\pgfutil@empty
    \else
        \c@pgf@counta=\pgfplots@listindex\relax
        \advance\c@pgf@counta by\pgfplots@listindex@shift\relax
        \ifnum\c@pgf@counta<0
            \c@pgf@counta=-\c@pgf@counta
        \fi
        \edef\pgfplots@listindex{\the\c@pgf@counta}%
    \fi
    \ifnum\pgfplots@cycle@dim>0
        % use the 'cycle multi list' feature.
        %
        % it employs a scalar -> multiindex map like
        % void fromScalar( size_t d, size_t scalar, size_t* Iout, const size_t* N )
        % {
        %   size_t ret=scalar;
        %   for( int i = d-1; i>=0; --i ) {
        %       Iout[i] = ret % N[i];
        %       ret /= N[i];
        %   }
        % }
        % to get the different indices into the cycle lists.
        %--------------------------------------------------
        \c@pgf@counta=\pgfplots@cycle@dim\relax
        \c@pgf@countb=\pgfplots@listindex\relax
        \advance\c@pgf@counta by-1
        \pgfplotsloop{%
            \ifnum\c@pgf@counta<0
                \pgfplotsloopcontinuefalse
            \else
                \pgfplotsloopcontinuetrue
            \fi
        }{%
            \pgfkeysgetvalue{/pgfplots/cycle multi list/@N\the\c@pgf@counta}\pgfplots@cycle@N
            % compute list index:
            \pgfplotsmathmodint{\c@pgf@countb}{\pgfplots@cycle@N}%
            \divide\c@pgf@countb by \pgfplots@cycle@N\relax
            %
            \expandafter\pgfplots@getautoplotspec@
                \csname pgfp@cyclist@/pgfplots/cycle multi list/@list\the\c@pgf@counta @\endcsname
                {\pgfplots@cycle@N}%
                {\pgfmathresult}%
            \t@pgfplots@toka=\expandafter{#1,}%
            \t@pgfplots@tokb=\expandafter{\pgfplotsretval}%
            \edef#1{\the\t@pgfplots@toka\the\t@pgfplots@tokb}%
            \advance\c@pgf@counta by-1
        }%
    \else
        % normal cycle list:
        \pgfplotslistsize\autoplotspeclist\to\c@pgf@countd
        \pgfplots@getautoplotspec@{\autoplotspeclist}{\c@pgf@countd}{\pgfplots@listindex}%
        \let#1=\pgfplotsretval
    \fi
    \pgfmath@smuggleone#1%
    \endgroup
}

\pgfplotsset{
    cycle list set/.initial=
}
\makeatother
